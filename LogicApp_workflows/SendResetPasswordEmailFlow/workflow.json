{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Condition": {
                "actions": {
                    "Set_ResetPasswordUrl": {
                        "inputs": {
                            "name": "ResetPasswordUrl",
                            "value": "@{concat(variables('BaseResetPasswordUrl'),variables('id_token'))}"
                        },
                        "runAfter": {
                            "Set_id_token": [
                                "Succeeded"
                            ]
                        },
                        "type": "SetVariable"
                    },
                    "Set_id_token": {
                        "inputs": {
                            "name": "id_token",
                            "value": "@{substring(outputs('GenerateUserIdToken')['headers']?['Location'],add(indexOf(outputs('GenerateUserIdToken')['headers']?['Location'],'#id_token='),10))}"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@outputs('GenerateUserIdToken')?['statusCode']",
                                302
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "GenerateUserIdToken": [
                        "Succeeded",
                        "Failed"
                    ]
                },
                "type": "If"
            },
            "GenerateUserIdToken": {
                "inputs": {
                    "method": "GET",
                    "queries": {
                        "client_id": "@{parameters('LogicAppRegistrationClientId')}",
                        "disable_cache": "true",
                        "login_hint": "@{triggerBody()?['email']}",
                        "nonce": "@{guid()}",
                        "redirect_uri": "https://jwt.ms",
                        "response_type": "id_token",
                        "scope": "openid"
                    },
                    "uri": "https://@{parameters('TenantName')}.b2clogin.com/@{parameters('TenantName')}.onmicrosoft.com/B2C_1A_Generate_RestPassword_Token/oauth2/v2.0/authorize"
                },
                "runAfter": {
                    "Initialize_ResetPasswordUrl": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                },
                "type": "Http"
            },
            "Initialize_BaseResetPasswordUrl": {
                "inputs": {
                    "variables": [
                        {
                            "name": "BaseResetPasswordUrl",
                            "type": "string",
                            "value": "https://@{parameters('TenantName')}.b2clogin.com/@{parameters('TenantName')}.onmicrosoft.com/B2C_1A_PasswordReset/oauth2/v2.0/authorize?client_id=@{parameters('LogicAppRegistrationClientId')}&nonce=123&redirect_uri=https://jwt.ms&scope=openid&response_type=id_token&disable_cache=true&id_token_hint="
                        }
                    ]
                },
                "runAfter": {
                    "Response_to_B2C": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_ResetPasswordUrl": {
                "inputs": {
                    "variables": [
                        {
                            "name": "ResetPasswordUrl",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_id_token": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_id_token": {
                "inputs": {
                    "variables": [
                        {
                            "name": "id_token",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_BaseResetPasswordUrl": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Response_to_B2C": {
                "inputs": {
                    "body": {
                        "CorrelationId": "@workflow()['run']['name']",
                        "Message": "Reset Password Request Received"
                    },
                    "statusCode": 200
                },
                "kind": "Http",
                "runAfter": {},
                "type": "Response"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "LogicAppRegistrationClientId": {
                "defaultValue": "your LogicApp app registration client id",
                "type": "String"
            },
            "TenantName": {
                "defaultValue": "yourtenantname",
                "type": "String"
            }
        },
        "triggers": {
            "manual": {
                "inputs": {
                    "schema": {
                        "properties": {
                            "email": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "parameters": {}
}