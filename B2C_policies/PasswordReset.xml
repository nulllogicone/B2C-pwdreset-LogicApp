<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
  PolicySchemaVersion="0.3.0.0"
  TenantId="{Settings:Tenant}"
  PolicyId="B2C_1A_PasswordReset"
  PublicPolicyUri="http://{Settings:Tenant}/B2C_1A_PasswordReset"
  DeploymentMode="Development"
  UserJourneyRecorderEndpoint="urn:journeyrecorder:applicationinsights">

  <BasePolicy>
		<TenantId>{Settings:Tenant}</TenantId>
		<PolicyId>B2C_1A_TrustFrameworkExtensions</PolicyId>
	</BasePolicy>

	<BuildingBlocks>
		<ClaimsSchema>
			<!-- Sample: Read only email address to present to the user-->
			<ClaimType Id="ReadOnlyEmail">
				<DisplayName>Verified Email Address</DisplayName>
				<DataType>string</DataType>
				<UserInputType>Readonly</UserInputType>
			</ClaimType>

			<ClaimType Id="newPassword">
				<DisplayName>New Password</DisplayName>
				<DataType>string</DataType>
				<UserHelpText>Enter new password</UserHelpText>
				<UserInputType>Password</UserInputType>
			</ClaimType>
			<ClaimType Id="reenterPassword">
				<DisplayName>Reenter Password</DisplayName>
				<DataType>string</DataType>
				<UserHelpText>Reenter new password</UserHelpText>
				<UserInputType>Password</UserInputType>
			</ClaimType>

			<!--Sample: Stores the error message for unsolicited request (a request without id_token_hint) and user not found-->
			<ClaimType Id="errorMessage">
				<DisplayName>Error</DisplayName>
				<DataType>string</DataType>
				<UserHelpText>Add help text here</UserHelpText>
				<UserInputType>Paragraph</UserInputType>
			</ClaimType>
			<ClaimType Id="userMessage">
				<DisplayName></DisplayName>
				<DataType>string</DataType>
				<UserInputType>Paragraph</UserInputType>
			</ClaimType>
		</ClaimsSchema>

		<ClaimsTransformations>
			<!--Sample: Initiates the errorMessage claims type with the error message-->
			<ClaimsTransformation Id="CreateUnsolicitedErrorMessage" TransformationMethod="CreateStringClaim">
				<InputParameters>
					<InputParameter Id="value" DataType="string" Value="Your reset password key is no longer valid." />
				</InputParameters>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="errorMessage" TransformationClaimType="createdClaim" />
				</OutputClaims>
			</ClaimsTransformation>

			<!--Sample: Copy the email to ReadOnlyEamil claim type-->
			<ClaimsTransformation Id="CopyEmailAddress" TransformationMethod="FormatStringClaim">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim" />
				</InputClaims>
				<InputParameters>
					<InputParameter Id="stringFormat" DataType="string" Value="{0}" />
				</InputParameters>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="ReadOnlyEmail" TransformationClaimType="outputClaim" />
				</OutputClaims>
			</ClaimsTransformation>
		</ClaimsTransformations>

	</BuildingBlocks>

	<ClaimsProviders>
		<ClaimsProvider>
			<DisplayName>Self Asserted</DisplayName>
			<TechnicalProfiles>
				<!-- Demo: Show error message-->
				<TechnicalProfile Id="SelfAsserted-Unsolicited">
					<DisplayName>Unsolicited error message</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
					<Metadata>
						<Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
						<!-- Sample: Remove the continue button-->
						<Item Key="setting.showContinueButton">false</Item>
						<Item Key="setting.showCancelButton">false</Item>
					</Metadata>
					<InputClaimsTransformations>
						<InputClaimsTransformation ReferenceId="CreateUnsolicitedErrorMessage" />
					</InputClaimsTransformations>
					<InputClaims>
						<InputClaim ClaimTypeReferenceId="errorMessage"/>
					</InputClaims>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="errorMessage"/>
					</OutputClaims>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>

		<!--Sample: This technical profile specifies how B2C should validate your token, and what claims you want B2C to extract from the token. 
      The METADATA value in the TechnicalProfile meta-data is required. 
      The “IdTokenAudience” and “issuer” arguments are optional (see later section)-->
		<ClaimsProvider>
			<DisplayName>My ID Token Hint ClaimsProvider</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="IdTokenHint_ExtractClaims">
					<DisplayName> My ID Token Hint TechnicalProfile</DisplayName>
					<Protocol Name="None" />
					<Metadata>

						<!--Sample action required: replace with your endpoint location -->
						<Item Key="METADATA">https://pwdreset.b2clogin.com/pwdreset.onmicrosoft.com/B2C_1A_PasswordReset/v2.0/.well-known/openid-configuration</Item>

						<!-- <Item Key="IdTokenAudience">your_optional_audience_override</Item> -->
						<!-- <Item Key="issuer">your_optional_token_issuer_override</Item> -->
					</Metadata>
					<OutputClaims>
						<!--Sample: Read the email claim from the id_token_hint-->
						<OutputClaim ClaimTypeReferenceId="email" />
					</OutputClaims>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>

		<ClaimsProvider>
			<DisplayName>Self Asserted</DisplayName>
			<TechnicalProfiles>
				<!-- Renders the message to the user-->
				<TechnicalProfile Id="SelfAsserted-PasswordResetUserMessage">
					<DisplayName>Password reset</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<Metadata>
						<Item Key="ContentDefinitionReferenceId">api.selfasserted.profileupdate</Item>
						<!-- Hide the continue and cancel buttons -->
						<Item Key="setting.showContinueButton">false</Item>
						<Item Key="setting.showCancelButton">false</Item>
					</Metadata>
					<InputClaims>
						<InputClaim ClaimTypeReferenceId="userMessage" DefaultValue="Password has been changed" />
					</InputClaims>
					<OutputClaims>
						<!-- Show the paragraph claim with the message to the user -->
						<OutputClaim ClaimTypeReferenceId="userMessage" />
					</OutputClaims>
					<UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>

		<ClaimsProvider>
			<DisplayName>Copy Email Technical Profile</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="ClaimGenerator">
					<DisplayName>Copy email claim</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="ReadOnlyEmail"/>
					</OutputClaims>
					<OutputClaimsTransformations>
						<OutputClaimsTransformation ReferenceId="CopyEmailAddress"/>
					</OutputClaimsTransformations>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>

		<ClaimsProvider>
			<DisplayName>Self Asserted Change password</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="SelfAsserted-LocalAccountWritePasswordUsingObjectId">
					<DisplayName>Call Self Asserted Change password</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<Metadata>
						<Item Key="ContentDefinitionReferenceId">api.localaccountpasswordreset</Item>
					</Metadata>
					<CryptographicKeys>
						<Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
					</CryptographicKeys>
					<InputClaimsTransformations>
						<InputClaimsTransformation ReferenceId="CopyEmailAddress" />
					</InputClaimsTransformations>
					<InputClaims>
						<InputClaim ClaimTypeReferenceId="objectId" />
						<InputClaim ClaimTypeReferenceId="ReadOnlyEmail" />
					</InputClaims>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="ReadOnlyEmail" Required="true"/>
						<OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
						<OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
					</OutputClaims>
					<ValidationTechnicalProfiles>
						<ValidationTechnicalProfile ReferenceId="AAD-UserWritePasswordUsingObjectId" />
					</ValidationTechnicalProfiles>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>

	</ClaimsProviders>

	<UserJourneys>
		<UserJourney Id="ResetPasswordFromIdTokenHint">
			<OrchestrationSteps>

				<!--Sample: Read the input claims from the id_token_hint-->
				<OrchestrationStep Order="1" Type="GetClaims" CpimIssuerTechnicalProfileReferenceId="IdTokenHint_ExtractClaims" />

				<OrchestrationStep Order="2" Type="ClaimsExchange">
					<ClaimsExchanges>
						<ClaimsExchange Id="SetUserEmailAddressClaim" TechnicalProfileReferenceId="ClaimGenerator"/>
					</ClaimsExchanges>
				</OrchestrationStep>

				<!-- Sample: Check if user tries to run the policy without invitation -->
				<OrchestrationStep Order="3" Type="ClaimsExchange">
					<Preconditions>
						<Precondition Type="ClaimsExist" ExecuteActionsIf="true">
							<Value>email</Value>
							<Action>SkipThisOrchestrationStep</Action>
						</Precondition>
					</Preconditions>
					<ClaimsExchanges>
						<ClaimsExchange Id="BlockSendClaimsOnMissingToken" TechnicalProfileReferenceId="SelfAsserted-Unsolicited" />
					</ClaimsExchanges>
				</OrchestrationStep>

				<!-- Sample: Self-asserted sign-up page -->
				<OrchestrationStep Order="4" Type="ClaimsExchange">
					<ClaimsExchanges>
						<ClaimsExchange Id="PasswordResetUsingEmailAddress" TechnicalProfileReferenceId="AAD-UserReadUsingEmailAddress"/>
					</ClaimsExchanges>
				</OrchestrationStep>

				<!-- Sample: Self-asserted sign-up page -->
				<OrchestrationStep Order="5" Type="ClaimsExchange">
					<ClaimsExchanges>
						<ClaimsExchange Id="NewCredentials" TechnicalProfileReferenceId="SelfAsserted-LocalAccountWritePasswordUsingObjectId"/>
					</ClaimsExchanges>
				</OrchestrationStep>

				<OrchestrationStep Order="6" Type="ClaimsExchange">
					<ClaimsExchanges>
						<ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
					</ClaimsExchanges>
				</OrchestrationStep>


				<!-- Blocks the user from issuing the access token, by calling the self asserted page without continue button-->
				<OrchestrationStep Order="7" Type="ClaimsExchange">
					<ClaimsExchanges>
						<ClaimsExchange Id="BlockSendClaims" TechnicalProfileReferenceId="SelfAsserted-PasswordResetUserMessage" />
					</ClaimsExchanges>
				</OrchestrationStep>

				<!--Sample: Issue an access token-->
				<OrchestrationStep Order="8" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer"/>

			</OrchestrationSteps>
			<ClientDefinition ReferenceId="DefaultWeb"/>
		</UserJourney>
	</UserJourneys>

	<RelyingParty>
		<DefaultUserJourney ReferenceId="ResetPasswordFromIdTokenHint" />
		<UserJourneyBehaviors>
			<JourneyInsights TelemetryEngine="ApplicationInsights" InstrumentationKey="92dcc7d1-f3cb-4977-ade8-82aaf3fd21af" DeveloperMode="true" ClientEnabled="false" ServerEnabled="true" TelemetryVersion="1.0.0" />
			<ScriptExecution>Allow</ScriptExecution>  
		</UserJourneyBehaviors>
		<TechnicalProfile Id="PolicyProfile">
			<DisplayName>PolicyProfile</DisplayName>
			<Protocol Name="OpenIdConnect" />

			<!--Sample: Set the input claims to be read from the id_token_hint-->
			<InputClaims>
				<InputClaim ClaimTypeReferenceId="email" PartnerClaimType="email" />
			</InputClaims>

			<OutputClaims>
				<OutputClaim ClaimTypeReferenceId="email" />
				<OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub"/>
				<OutputClaim ClaimTypeReferenceId="tenantId" AlwaysUseDefaultValue="true" DefaultValue="{Policy:TenantObjectId}" />
			</OutputClaims>
			<SubjectNamingInfo ClaimType="sub" />
		</TechnicalProfile>
	</RelyingParty>
</TrustFrameworkPolicy>
